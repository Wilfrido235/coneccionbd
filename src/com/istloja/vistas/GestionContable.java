/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istloja.vistas;

import com.istloja.controlador.Personabd;
import com.istloja.controlador.Proveedoresdb;
import com.istloja.controlador.Inventariobd;
import com.istloja.modelTables.ModelTablePersona;
import com.istloja.modelTables.ModelTablePersonaV2;
import com.istloja.modelo.Persona;
import com.istloja.modelo.Proveedores;
import com.istloja.modelo.Inventario;
import com.istloja.utilidad.Utilidades;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import com.istloja.modelTables.ComunicacionVistaModelosTablas;
import com.istloja.modelTables.ModelTableProveedores;
import com.istloja.modelTables.ModelTableInventario;
import com.istloja.modelTables.ModelTableVentas;
import com.istloja.modelo.NotaVenta;
import com.istloja.modelo.ProductoVenta;
import com.istloja.modelo.TipoUsuario;
import com.istloja.modelo.Venta2;

public class GestionContable extends javax.swing.JFrame implements ComunicacionVistaModelosTablas {

    private Utilidades utilidades;
    private Personabd controladorPersona;
    private Persona personaEditarEliminar;
    private Proveedores editarProvedores;
    private GestionPersona gestionPersona;
    private GestionContableProvedores gestionProvedores;
    private GestionInventario gestionInventario;
    //private ModelTablePersona modelTablePersona;
    private ModelTablePersonaV2 modelTablePersonaV2;
    private ModelTableProveedores modelTableProveedores;
    private ModelTableInventario modelTableInventario;
    private Proveedoresdb controladorProveedor;
    private Inventariobd controladorInventario;
    private Inventario inventarioSeleccionado;
    private ModelTableVentas modelTableVentas;

    /**
     * Creates new form GestionPersonaV1
     */
    public GestionContable() {
        controladorPersona = new Personabd();
        controladorProveedor = new Proveedoresdb();
        controladorInventario = new Inventariobd();
        // modelTablePersona = new ModelTablePersona(controladorPersona.obtenerPersonas(),this);
        modelTablePersonaV2 = new ModelTablePersonaV2(controladorPersona.obtenerPersonas(), this);
        modelTableProveedores = new ModelTableProveedores(controladorProveedor.obtenerProveedores(), this);
        modelTableInventario = new ModelTableInventario(controladorInventario.obtenerProductosInventario(), this);
        modelTableVentas = new ModelTableVentas(new ArrayList<ProductoVenta>(), this);
        initComponents();
        productosVenta = new ArrayList<>();
        utilidades = new Utilidades();
        setLocationRelativeTo(null);
        gestionPersona = new GestionPersona(txtCedula, txtNombres, txtApellidos, txtDireccion, txtCorreo, txtTelefono, utilidades, this, jcboxGenero,jDateFechaNacimiento);
        gestionProvedores = new GestionContableProvedores(txtRucProveedores, txtRazonSocialProveedores, txtTipoActividadProveedores, txtNombreRepresentateLegalProveedores, txtApellidosRepresentateLegalProveedores, txtTelefonoProveedores, txtCorrreoProveedores, txtDireccionProveedores, jDateFechaVencimientoDeuda, utilidades, this);
        gestionInventario = new GestionInventario(txtCodigo_proInventario, txtDescripcionInventario, txtcatidadInventario, txtPrecios_compraInventario, TextPrecio_compraConIva, TextPrecio_mayorista, TextPrecio_clienteFijo, TextPrecio_clienteNormal, jDateInventario, utilidades, this);
    }

    public void EditarPersona() {
        if (personaEditarEliminar == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay una persona seleccionada para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Persona personaEditarLocal = gestionPersona.guardarEditar(true);
        if (personaEditarLocal != null) {
            personaEditarLocal.setFecha_registro(personaEditarEliminar.getFecha_registro());
            personaEditarLocal.setId_persona(personaEditarEliminar.getId_persona());
            if (controladorPersona.actualizar(personaEditarLocal)) {
                JOptionPane.showMessageDialog(rootPane, "Persona editada con exito del sitema.");
                gestionPersona.limpiarCamposPersona();
                personaEditarEliminar = null;
                actulizarTodalatablaPersonas();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede editar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        tabGeneral = new javax.swing.JTabbedPane();
        panelCliente = new javax.swing.JPanel();
        txtTituloCliente = new javax.swing.JLabel();
        panelCuerpoRegistro = new javax.swing.JPanel();
        lblCedula = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jcboxGenero = new javax.swing.JComboBox<>();
        RadioButton_cedula = new javax.swing.JRadioButton();
        RadioButton_pasaporte = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        jDateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnTraer = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollCliente = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();
        lblBuscarCliente = new javax.swing.JLabel();
        comboParametroBusqueda = new javax.swing.JComboBox<>();
        txtParametroBusqueda = new javax.swing.JTextField();
        btnBuscarPersona = new javax.swing.JButton();
        panelProveedores = new javax.swing.JPanel();
        txtTituloProveedores = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtRucProveedores = new javax.swing.JTextField();
        txtRazonSocialProveedores = new javax.swing.JTextField();
        txtTipoActividadProveedores = new javax.swing.JTextField();
        txtNombreRepresentateLegalProveedores = new javax.swing.JTextField();
        txtApellidosRepresentateLegalProveedores = new javax.swing.JTextField();
        txtTelefonoProveedores = new javax.swing.JTextField();
        txtCorrreoProveedores = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtDireccionProveedores = new javax.swing.JTextField();
        btnGuardarProveedores = new javax.swing.JButton();
        btnEditarProveedores = new javax.swing.JButton();
        btnElimnarProveedores = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jDateFechaVencimientoDeuda = new com.toedter.calendar.JDateChooser();
        btnTraerRegistroProvedor = new javax.swing.JButton();
        btnLimpiarProveedores = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProvedores = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        comboParamtroBusquedaProveedor = new javax.swing.JComboBox<>();
        txtParametroBusquedaProveedor = new javax.swing.JTextField();
        btnBuscarProveedor = new javax.swing.JButton();
        panelInventario = new javax.swing.JPanel();
        txtTituloInventario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCodigo_proInventario = new javax.swing.JTextField();
        txtDescripcionInventario = new javax.swing.JTextField();
        txtPrecios_compraInventario = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        TextPrecio_compraConIva = new javax.swing.JTextField();
        TextPrecio_mayorista = new javax.swing.JTextField();
        TextPrecio_clienteFijo = new javax.swing.JTextField();
        TextPrecio_clienteNormal = new javax.swing.JTextField();
        jDateInventario = new com.toedter.calendar.JDateChooser();
        jLabel27 = new javax.swing.JLabel();
        txtcatidadInventario = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        comboParametroBusquedaInventario = new javax.swing.JComboBox<>();
        txtParametroBusquedaInventario = new javax.swing.JTextField();
        btnBuscarInventario = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGuardarInventario = new javax.swing.JButton();
        btnEditarInventario = new javax.swing.JButton();
        btnEliminarInventario = new javax.swing.JButton();
        btnTraerInventario = new javax.swing.JButton();
        btnLimpiarInventario = new javax.swing.JButton();
        panelVenta = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanelVentas = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        btnAgregarVentas = new javax.swing.JButton();
        txtNotaVentaVentas = new javax.swing.JTextField();
        txtCedulaoRucClienteVentas = new javax.swing.JTextField();
        txtProductoVentas = new javax.swing.JTextField();
        txtCantidadProductoVentas = new javax.swing.JTextField();
        txtNombreClienteVentas = new javax.swing.JTextField();
        txtTelefonoClienteVentas = new javax.swing.JTextField();
        txtFechaVentaVentas = new javax.swing.JTextField();
        txtDireccionClienteVentas = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        TableVentas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtSubTotalVentas = new javax.swing.JTextField();
        txtIVAVentas = new javax.swing.JTextField();
        txtTotalVentas = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        menuGeneral = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuBuscarPersona = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion Personas");
        setResizable(false);

        txtTituloCliente.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTituloCliente.setText("Resgistro personas");

        panelCuerpoRegistro.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuerpo Registro"));

        lblCedula.setText("DNI:");

        lblNombre.setText("Nombres:");

        lblApellido.setText("Apellidos:");

        lblDireccion.setText("Direccion:");

        lblTelefono.setText("Telefono:");

        lblCorreo.setText("Correo:");

        txtCedula.setToolTipText("Ingrese una cédula correcta.");
        txtCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaFocusLost(evt);
            }
        });
        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });

        txtNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresActionPerformed(evt);
            }
        });

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });

        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });

        jLabel16.setText("Genero");

        jcboxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Especificar", "Hombre", "Mujer" }));

        RadioButton_cedula.setText("Cedula");
        RadioButton_cedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButton_cedulaActionPerformed(evt);
            }
        });

        RadioButton_pasaporte.setText("Pasaporte");
        RadioButton_pasaporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButton_pasaporteActionPerformed(evt);
            }
        });

        jLabel15.setText("Fecha Nacimiento: ");

        javax.swing.GroupLayout panelCuerpoRegistroLayout = new javax.swing.GroupLayout(panelCuerpoRegistro);
        panelCuerpoRegistro.setLayout(panelCuerpoRegistroLayout);
        panelCuerpoRegistroLayout.setHorizontalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNombre)
                                    .addComponent(lblApellido))
                                .addGap(6, 6, 6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoRegistroLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblCedula)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RadioButton_cedula)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RadioButton_pasaporte))
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCorreo)
                                    .addComponent(jLabel16)
                                    .addComponent(lblTelefono)))
                            .addComponent(lblDireccion, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcboxGenero, 0, 929, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCuerpoRegistroLayout.setVerticalGroup(
            panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoRegistroLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCedula)
                    .addComponent(RadioButton_cedula)
                    .addComponent(RadioButton_pasaporte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblApellido))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccion)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreo)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcboxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jDateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/guardar-el-archivo.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/actualizar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnTraer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/frente.png"))); // NOI18N
        btnTraer.setText("Traer");
        btnTraer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/escoba.png"))); // NOI18N
        btnLimpiar.setText("Limpiar Formulario");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        tablaCliente.setModel(modelTablePersonaV2);
        jScrollCliente.setViewportView(tablaCliente);

        lblBuscarCliente.setText("Buscar Cliente");

        comboParametroBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cédula", "Nombre", "Apellido", "Telefono", "Correo" }));
        comboParametroBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboParametroBusquedaActionPerformed(evt);
            }
        });

        txtParametroBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParametroBusquedaActionPerformed(evt);
            }
        });
        txtParametroBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtParametroBusquedaKeyReleased(evt);
            }
        });

        btnBuscarPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/buscando-vidrio.png"))); // NOI18N
        btnBuscarPersona.setText("Buscar");
        btnBuscarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPersonaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelClienteLayout = new javax.swing.GroupLayout(panelCliente);
        panelCliente.setLayout(panelClienteLayout);
        panelClienteLayout.setHorizontalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(txtTituloCliente))
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelClienteLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblBuscarCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboParametroBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelClienteLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(btnGuardar)))
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(btnEditar)
                                .addGap(50, 50, 50)
                                .addComponent(btnEliminar)
                                .addGap(53, 53, 53)
                                .addComponent(btnTraer)
                                .addGap(61, 61, 61)
                                .addComponent(btnLimpiar))
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtParametroBusqueda)))
                        .addGap(31, 31, 31)
                        .addComponent(btnBuscarPersona))
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 1028, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelClienteLayout.setVerticalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTituloCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCuerpoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnTraer)
                    .addComponent(btnLimpiar))
                .addGap(16, 16, 16)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBuscarCliente)
                    .addComponent(comboParametroBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParametroBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPersona))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Clientes", panelCliente);

        txtTituloProveedores.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTituloProveedores.setText("Resgistro proveedores");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Proveedor"));

        jLabel1.setText("RUC:");

        jLabel2.setText("RAZON SOCIAL:");

        jLabel3.setText("TIPO ACTIVIDAD:");

        jLabel4.setText("NOMBRE REPRESENTANTE LEGAL:");

        jLabel5.setText("APELLIDOS REPRESENTANTE LEGAL:");

        jLabel6.setText("TELEFONO:");

        jLabel7.setText("CORREO:");

        txtTelefonoProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoProveedoresActionPerformed(evt);
            }
        });

        jLabel17.setText("DIRECCION:");

        txtDireccionProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionProveedoresActionPerformed(evt);
            }
        });

        btnGuardarProveedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/guardar-el-archivo.png"))); // NOI18N
        btnGuardarProveedores.setText("Guardar");
        btnGuardarProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProveedoresActionPerformed(evt);
            }
        });

        btnEditarProveedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/actualizar.png"))); // NOI18N
        btnEditarProveedores.setText("Editar");
        btnEditarProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProveedoresActionPerformed(evt);
            }
        });

        btnElimnarProveedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/eliminar.png"))); // NOI18N
        btnElimnarProveedores.setText("Eliminar");
        btnElimnarProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimnarProveedoresActionPerformed(evt);
            }
        });

        jLabel26.setText("Fecha Vencimiento Deuda:");

        btnTraerRegistroProvedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/frente.png"))); // NOI18N
        btnTraerRegistroProvedor.setText("Traer");
        btnTraerRegistroProvedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerRegistroProvedorActionPerformed(evt);
            }
        });

        btnLimpiarProveedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/escoba.png"))); // NOI18N
        btnLimpiarProveedores.setText("Limpiar Formulario");
        btnLimpiarProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarProveedoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel26)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGuardarProveedores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditarProveedores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnElimnarProveedores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTraerRegistroProvedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiarProveedores)
                        .addGap(95, 95, 95))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtRazonSocialProveedores, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTipoActividadProveedores, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreRepresentateLegalProveedores, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellidosRepresentateLegalProveedores, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefonoProveedores, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCorrreoProveedores, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDireccionProveedores, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateFechaVencimientoDeuda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                            .addComponent(txtRucProveedores))
                        .addContainerGap(28, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRucProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRazonSocialProveedores, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTipoActividadProveedores)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtNombreRepresentateLegalProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtApellidosRepresentateLegalProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtTelefonoProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCorrreoProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccionProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jDateFechaVencimientoDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardarProveedores)
                            .addComponent(btnEditarProveedores)
                            .addComponent(btnElimnarProveedores)
                            .addComponent(btnTraerRegistroProvedor)
                            .addComponent(btnLimpiarProveedores))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaProvedores.setModel(modelTableProveedores);
        jScrollPane1.setViewportView(tablaProvedores);

        jLabel8.setText("Buscador");

        comboParamtroBusquedaProveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ruc", "Nombre", "Apellido", "Dirección", "Teléfono", "Correo", "Razón social" }));
        comboParamtroBusquedaProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboParamtroBusquedaProveedorActionPerformed(evt);
            }
        });

        txtParametroBusquedaProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParametroBusquedaProveedorActionPerformed(evt);
            }
        });

        btnBuscarProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/buscando-vidrio.png"))); // NOI18N
        btnBuscarProveedor.setText("BUSCAR PROVEEDOR");
        btnBuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProveedoresLayout = new javax.swing.GroupLayout(panelProveedores);
        panelProveedores.setLayout(panelProveedoresLayout);
        panelProveedoresLayout.setHorizontalGroup(
            panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProveedoresLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProveedoresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtTituloProveedores)
                        .addGap(860, 860, 860))
                    .addGroup(panelProveedoresLayout.createSequentialGroup()
                        .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelProveedoresLayout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addComponent(jLabel8)
                                    .addGap(18, 18, 18)
                                    .addComponent(comboParamtroBusquedaProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtParametroBusquedaProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(btnBuscarProveedor))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panelProveedoresLayout.setVerticalGroup(
            panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProveedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTituloProveedores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(comboParamtroBusquedaProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParametroBusquedaProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProveedor))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Proveedores", panelProveedores);

        txtTituloInventario.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTituloInventario.setText("Resgistro inventario");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel11.setText("Precios Compra:");

        jLabel10.setText("Descripcion:");

        jLabel9.setText("Codigo Producto:");

        txtPrecios_compraInventario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecios_compraInventarioFocusLost(evt);
            }
        });

        jLabel18.setText("Precio compra con iva");

        jLabel19.setText("Precio Mayorista");

        jLabel20.setText("Precio cliente fijo");

        jLabel21.setText("Precio Cliente Normal");

        jLabel22.setText("Fecha de caducidad");

        jLabel27.setText("Cantidad:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(4, 4, 4))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel22)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextPrecio_clienteNormal)
                    .addComponent(TextPrecio_clienteFijo)
                    .addComponent(TextPrecio_mayorista)
                    .addComponent(TextPrecio_compraConIva)
                    .addComponent(txtPrecios_compraInventario)
                    .addComponent(txtcatidadInventario)
                    .addComponent(txtDescripcionInventario)
                    .addComponent(txtCodigo_proInventario)
                    .addComponent(jDateInventario, javax.swing.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCodigo_proInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtDescripcionInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcatidadInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtPrecios_compraInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextPrecio_compraConIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(TextPrecio_mayorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(TextPrecio_clienteFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(TextPrecio_clienteNormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jLabel14.setText("Buscador");

        comboParametroBusquedaInventario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo Producto", "Descripcion" }));
        comboParametroBusquedaInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboParametroBusquedaInventarioActionPerformed(evt);
            }
        });

        btnBuscarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/buscando-vidrio.png"))); // NOI18N
        btnBuscarInventario.setText("Buscar Inventario");
        btnBuscarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInventarioActionPerformed(evt);
            }
        });

        jTable1.setModel(modelTableInventario);
        jScrollPane2.setViewportView(jTable1);

        btnGuardarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/guardar-el-archivo.png"))); // NOI18N
        btnGuardarInventario.setText("Guardar");
        btnGuardarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarInventarioActionPerformed(evt);
            }
        });

        btnEditarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/actualizar.png"))); // NOI18N
        btnEditarInventario.setText("Editar");
        btnEditarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarInventarioActionPerformed(evt);
            }
        });

        btnEliminarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/eliminar.png"))); // NOI18N
        btnEliminarInventario.setText("Eliminar");
        btnEliminarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInventarioActionPerformed(evt);
            }
        });

        btnTraerInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/frente.png"))); // NOI18N
        btnTraerInventario.setText("Traer");
        btnTraerInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraerInventarioActionPerformed(evt);
            }
        });

        btnLimpiarInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/istloja/resource/img/escoba.png"))); // NOI18N
        btnLimpiarInventario.setText("Limpiar Formulario");
        btnLimpiarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarInventarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInventarioLayout = new javax.swing.GroupLayout(panelInventario);
        panelInventario.setLayout(panelInventarioLayout);
        panelInventarioLayout.setHorizontalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInventarioLayout.createSequentialGroup()
                .addGroup(panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInventarioLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelInventarioLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(txtTituloInventario))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelInventarioLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(comboParametroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtParametroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarInventario))
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelInventarioLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(btnGuardarInventario)
                        .addGap(66, 66, 66)
                        .addComponent(btnEditarInventario)
                        .addGap(58, 58, 58)
                        .addComponent(btnEliminarInventario)
                        .addGap(46, 46, 46)
                        .addComponent(btnTraerInventario)
                        .addGap(60, 60, 60)
                        .addComponent(btnLimpiarInventario)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInventarioLayout.setVerticalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTituloInventario)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarInventario)
                    .addComponent(btnEditarInventario)
                    .addComponent(btnEliminarInventario)
                    .addComponent(btnTraerInventario)
                    .addComponent(btnLimpiarInventario))
                .addGap(3, 3, 3)
                .addGroup(panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(comboParametroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParametroBusquedaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarInventario))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("Inventario");
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        tabGeneral.addTab("Inventario", panelInventario);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel33.setText("NOTA VENTA");

        jLabel34.setText("NUMERO NOTA VENTA:");

        jLabel35.setText("CEDULA O RUC CLIENTE:");

        jLabel36.setText("NOMBRE CLIENTE:");

        jLabel37.setText("TELEFONO:");

        jLabel38.setText("DIRECCION");

        jLabel39.setText("FECHA VENTA");

        jLabel40.setText("ID PRODUCTO:");

        jLabel41.setText("CANTIDAD");

        btnAgregarVentas.setText("Agregar");
        btnAgregarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarVentasActionPerformed(evt);
            }
        });

        txtCedulaoRucClienteVentas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCedulaoRucClienteVentasFocusLost(evt);
            }
        });

        txtNombreClienteVentas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreClienteVentasFocusLost(evt);
            }
        });

        txtTelefonoClienteVentas.setEditable(false);

        txtFechaVentaVentas.setEditable(false);
        txtFechaVentaVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaVentaVentasActionPerformed(evt);
            }
        });

        txtDireccionClienteVentas.setEditable(false);

        TableVentas.setModel(modelTableVentas);
        jScrollPane6.setViewportView(TableVentas);

        jButton1.setText("Busqueda avanzada");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel12.setText("Sub total");

        jLabel13.setText("Iva");

        jLabel24.setText("Total");

        txtSubTotalVentas.setText("0.00");

        txtIVAVentas.setText("0.00");

        txtTotalVentas.setText("0.00");

        jLabel25.setText("Tipo de pago");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Imprimir");

        javax.swing.GroupLayout jPanelVentasLayout = new javax.swing.GroupLayout(jPanelVentas);
        jPanelVentas.setLayout(jPanelVentasLayout);
        jPanelVentasLayout.setHorizontalGroup(
            jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVentasLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVentasLayout.createSequentialGroup()
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelVentasLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12))
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24))
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel13)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSubTotalVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIVAVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(213, 213, 213))
                    .addGroup(jPanelVentasLayout.createSequentialGroup()
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addComponent(txtNombreClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel38))
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addComponent(txtTelefonoClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel39)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFechaVentaVentas, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(txtDireccionClienteVentas))
                        .addGap(494, 494, 494))
                    .addGroup(jPanelVentasLayout.createSequentialGroup()
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtProductoVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(txtCantidadProductoVentas))
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addGap(311, 311, 311)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregarVentas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(289, 289, 289))
                    .addGroup(jPanelVentasLayout.createSequentialGroup()
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel33))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCedulaoRucClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNotaVentaVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1028, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanelVentasLayout.setVerticalGroup(
            jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVentasLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txtNotaVentaVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txtCedulaoRucClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel38)
                    .addComponent(txtNombreClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccionClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel39)
                    .addComponent(txtFechaVentaVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoClienteVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(btnAgregarVentas)
                    .addComponent(txtProductoVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadProductoVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVentasLayout.createSequentialGroup()
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(txtSubTotalVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelVentasLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel25)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtIVAVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelVentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addComponent(jButton2)
                            .addComponent(txtTotalVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelVentasLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(180, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelVentaLayout = new javax.swing.GroupLayout(panelVenta);
        panelVenta.setLayout(panelVentaLayout);
        panelVentaLayout.setHorizontalGroup(
            panelVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 1072, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(panelVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelVentaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel23)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelVentaLayout.setVerticalGroup(
            panelVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVentaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(panelVentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelVentaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel23)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        tabGeneral.addTab("Venta", panelVenta);

        menuArchivo.setText("Archivo");

        menuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(menuSalir);

        jMenu2.setText("Acciones Persona");

        menuBuscarPersona.setText("Buscar");
        menuBuscarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBuscarPersonaActionPerformed(evt);
            }
        });
        jMenu2.add(menuBuscarPersona);

        menuArchivo.add(jMenu2);

        menuGeneral.add(menuArchivo);

        menuEditar.setText("Editar");
        menuGeneral.add(menuEditar);

        jMenu1.setText("Acerca de");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        menuGeneral.add(jMenu1);

        setJMenuBar(menuGeneral);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 1130, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void actulizarTodalatablaPersonas() {
        modelTablePersonaV2.setPersonas(controladorPersona.obtenerPersonas());
        modelTablePersonaV2.fireTableDataChanged();
    }

    public void actualizarInventario() {
        List<Inventario> invent = controladorInventario.obtenerProductosInventario();
        modelTableInventario.setInventarios(invent);
        modelTableInventario.fireTableDataChanged();
    }
    public void actualizarProveedores() {
        modelTableProveedores.setProveedores(controladorProveedor.obtenerProveedores());
        modelTableProveedores.fireTableDataChanged();
    }

    public void guardarInventario() {
        Inventario inventarioGuardar = gestionInventario.guardarEditarInventario(false);
        if (jDateInventario.getDate() != null) {
            inventarioGuardar.setFecha_caducidad(jDateInventario.getDate());
        }
        if (inventarioGuardar != null) {
            if (controladorInventario.registrarInventario(inventarioGuardar)) {
                JOptionPane.showMessageDialog(rootPane, "Inventario registrada en el sistema.");
                gestionInventario.limpiarInventario();
                actualizarInventario();

            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede guardar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }
    }

    public void editarInvebtario() {
        if (inventarioSeleccionado == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay una Producto seleccionada para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Inventario invent = gestionInventario.guardarEditarInventario(true);
        if (invent != null) {
            invent.setFecha_registro(inventarioSeleccionado.getFecha_registro());
            invent.setId_inventario(inventarioSeleccionado.getId_inventario());
            if (controladorInventario.actualizarInventario(invent)) {
                JOptionPane.showMessageDialog(rootPane, "Producto editado con exito del sitema.");
                gestionInventario.limpiarInventario();
                inventarioSeleccionado = null;
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede editar el Producto", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void eliminarInventario() {
        if (inventarioSeleccionado != null) {
            inventarioSeleccionado.setId_inventario(inventarioSeleccionado.getId_inventario());
            if (controladorInventario.eliminarInventario(inventarioSeleccionado)) {
                JOptionPane.showMessageDialog(rootPane, "Inventario eliminada con exito del sitema.");
                gestionInventario.limpiarInventario();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar el Inventario", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }

    }

    public void actualizarProvedores() {
        List<Proveedores> provedoresAct = controladorProveedor.obtenerProveedores();
        modelTableProveedores.setProveedores(provedoresAct);
        modelTableProveedores.fireTableDataChanged();
    }
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (controladorPersona.getPersonaCedula(txtCedula.getText()) != null) {
            JOptionPane.showMessageDialog(rootPane, "La persona con ese número de cédula ya se encuentra registrada en el sistema.");
        } else {
            Persona personaGuardar = gestionPersona.guardarEditar(false);
            if (jDateFechaNacimiento.getDate() != null) {
                personaGuardar.setFachaNacimiento(jDateFechaNacimiento.getDate());
            }
            if (personaGuardar != null) {
                if (controladorPersona.registrarPersona(personaGuardar)) {
                    JOptionPane.showMessageDialog(rootPane, "Persona registrada en el sistema.");
                    gestionPersona.limpiarCamposPersona();
                    modelTablePersonaV2.setPersonas(controladorPersona.obtenerPersonas());
                    modelTablePersonaV2.fireTableDataChanged();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se puede guardar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_btnGuardarActionPerformed
    public void GuardarProvedores() {
        if (controladorProveedor.buscarCodigoProvedores(txtRucProveedores.getText()) != null) {
            JOptionPane.showMessageDialog(rootPane, "La persona con este código ya se encuentra registrada en el sistema.");
        } else {
            Proveedores provedoresGuardar = gestionProvedores.guardarEditarProvedores(false);
            if (jDateFechaVencimientoDeuda.getDate() != null) {
                provedoresGuardar.setFechaVencimientoDeuda(jDateFechaVencimientoDeuda.getDate());
            }
            if (provedoresGuardar != null) {
                if (controladorProveedor.registrarProveedor(provedoresGuardar)) {
                    JOptionPane.showMessageDialog(rootPane, "Proveedor registrada en el sistema.");
                    gestionProvedores.limpiar_Caja_Provedores();
                     actualizarProveedores();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede guardar este Proveedor", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void editarProvedores() {
        if (editarProvedores == null) {
            JOptionPane.showMessageDialog(rootPane, "No hay una persona seleccionada para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Proveedores editarProvedorLocal = gestionProvedores.guardarEditarProvedores(true);
        if (editarProvedorLocal != null) {
            editarProvedorLocal.setFecha_registro(editarProvedores.getFecha_registro());
            editarProvedorLocal.setIdProveedores(editarProvedores.getIdProveedores());
            if (controladorProveedor.actualizarProveedores(editarProvedorLocal)) {
                JOptionPane.showMessageDialog(rootPane, "Persona editada con exito del sitema.");
                gestionProvedores.limpiar_Caja_Provedores();
                editarProvedores = null;
                 actualizarProveedores();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede editar la persona", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    public void eliminarProvedores() {
        if (editarProvedores != null) {
            editarProvedores.setIdProveedores(editarProvedores.getIdProveedores());
            if (controladorProveedor.eliminarProveedores(editarProvedores)) {
                JOptionPane.showMessageDialog(rootPane, "Persona eliminada con exito del sitema.");
                gestionProvedores.limpiar_Caja_Provedores();
                editarProvedores = null;
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar a la persona", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void buscarProvedoresParametros() {
        if (comboParamtroBusquedaProveedor.getSelectedItem().equals("Ruc")) {
            List<Proveedores> provedoresCodigoRuc = controladorProveedor.obtenerProvedoresRuc(txtParametroBusquedaProveedor.getText());
            modelTableProveedores.setProveedores(provedoresCodigoRuc);
            modelTableProveedores.fireTableDataChanged();
        } else if (comboParamtroBusquedaProveedor.getSelectedIndex() == 1) {
            List<Proveedores> provedoresNombre = controladorProveedor.obtenerProvedoresNombre(txtParametroBusquedaProveedor.getText());
            modelTableProveedores.setProveedores(provedoresNombre);
            modelTableProveedores.fireTableDataChanged();
        } else if (comboParamtroBusquedaProveedor.getSelectedIndex() == 2) {
            List<Proveedores> provedoresApellido = controladorProveedor.obtenerProvedoresApellido(txtParametroBusquedaProveedor.getText());
            modelTableProveedores.setProveedores(provedoresApellido);
            modelTableProveedores.fireTableDataChanged();
        } else if (comboParamtroBusquedaProveedor.getSelectedIndex() == 3) {
            List<Proveedores> provedoresDireccion = controladorProveedor.obtenerProvedoresDireccion(txtParametroBusquedaProveedor.getText());
            modelTableProveedores.setProveedores(provedoresDireccion);
            modelTableProveedores.fireTableDataChanged();
        } else if (comboParamtroBusquedaProveedor.getSelectedItem().equals("Telefono")) {
            List<Proveedores> provedoresTelefono = controladorProveedor.obtenerProvedoresTelefono(txtParametroBusquedaProveedor.getText());
            modelTableProveedores.setProveedores(provedoresTelefono);
            modelTableProveedores.fireTableDataChanged();
        } else if (comboParamtroBusquedaProveedor.getSelectedIndex() == 5) {
            List<Proveedores> personaCorreo = controladorProveedor.obtenerProvedoresCorreo(txtParametroBusquedaProveedor.getText());
            modelTableProveedores.setProveedores(personaCorreo);
            modelTableProveedores.fireTableDataChanged();
        } else if (comboParamtroBusquedaProveedor.getSelectedIndex() == 6) {
            List<Proveedores> provedoresServicio = controladorProveedor.obtenerProvedoresRazonsocial(txtParametroBusquedaProveedor.getText());
            modelTableProveedores.setProveedores(provedoresServicio);
            modelTableProveedores.fireTableDataChanged();
        }

    }

    public void traerUltimoProvedorRegistro() {
        List<Proveedores> obtenerUltimoprovedor = controladorProveedor.obtenerProveedores();
        Proveedores provedores = obtenerUltimoprovedor.get(obtenerUltimoprovedor.size() - 1);
        System.out.println(provedores);
        txtRucProveedores.setText(provedores.getRuc());
        txtRazonSocialProveedores.setText(provedores.getRazonSocial());
        txtTipoActividadProveedores.setText(provedores.getTipoActividad());
        txtNombreRepresentateLegalProveedores.setText(provedores.getNombre_representante_legal());
        txtApellidosRepresentateLegalProveedores.setText(provedores.getApellidos_representante_legal());
        txtTelefonoProveedores.setText(provedores.getTelefono());
        txtCorrreoProveedores.setText(provedores.getCorreo());
        txtDireccionProveedores.setText(provedores.getDireccion());
        jDateFechaVencimientoDeuda.setDate(provedores.getFechaVencimientoDeuda());
    }
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        EditarPersona();
        List<Persona> persona = controladorPersona.obtenerPersonas();
        modelTablePersonaV2.setPersonas(persona);
        modelTablePersonaV2.fireTableDataChanged();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnTraerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerActionPerformed
        // TODO add your handling code here:
        List<Persona> obtenerPersonas = controladorPersona.obtenerPersonas();
        personaEditarEliminar = obtenerPersonas.get(obtenerPersonas.size() - 1);
        txtCedula.setText(personaEditarEliminar.getCedula());
        txtNombres.setText(personaEditarEliminar.getNombre());
        txtApellidos.setText(personaEditarEliminar.getApellido());
        txtDireccion.setText(personaEditarEliminar.getDireccion());
        txtCorreo.setText(personaEditarEliminar.getCorreo());
        txtTelefono.setText(personaEditarEliminar.getTelefono());
        jcboxGenero.setSelectedIndex(personaEditarEliminar.getGenero());
        jDateFechaNacimiento.setDate(personaEditarEliminar.getFachaNacimiento());
    }//GEN-LAST:event_btnTraerActionPerformed

    public void buscarPersonaPorCedula() {
        Persona persona = controladorPersona.getPersonaCedula(txtCedula.getText());
        if (persona != null) {
            txtNombres.setText(persona.getNombre());
            txtApellidos.setText(persona.getApellido());
            txtDireccion.setText(persona.getDireccion());
            txtCorreo.setText(persona.getCorreo());
            txtTelefono.setText(persona.getTelefono());
            personaEditarEliminar = persona;
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se encontro la persona con ese número de cédula en la base de datos.", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtCedula.setText("");
            txtCedula.requestFocus();
        }
    }

    //Eliminar una persona de la base de datos.
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:asdasd
        if (personaEditarEliminar != null) {
            if (controladorPersona.eliminar(personaEditarEliminar)) {
                JOptionPane.showMessageDialog(rootPane, "Persona eliminada con éxito del sitema.");
                gestionPersona.limpiarCamposPersona();
                actulizarTodalatablaPersonas();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar la persona seleccionada.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No hay persona seleccionada para eliminar.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        gestionPersona.limpiarCamposPersona();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuSalirActionPerformed

    private void menuBuscarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBuscarPersonaActionPerformed
        // TODO add your handling code here:
        buscarPersonaPorCedula();
    }//GEN-LAST:event_menuBuscarPersonaActionPerformed

    private void btnBuscarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPersonaActionPerformed
        // TODO add your handling code here:
//        List<Persona> personas = new ArrayList<>();
//        personas.add(controladorPersona.getPersonaCedula(txtParametroBusqueda.getText()));
//        modelTablePersonaV2.setPersonas(personas);
//        modelTablePersonaV2.fireTableDataChanged();
//        List<Persona> personaNombre = controladorPersona.getPersonaNombreListo(txtParametroBusqueda.getText());
//        modelTablePersonaV2.setPersonas(personaNombre);
//        modelTablePersonaV2.fireTableDataChanged();
        if (comboParametroBusqueda.getSelectedItem().equals("Cedula")) {
            List<Persona> personas = new ArrayList<>();
            personas.add(controladorPersona.getPersonaCedula(txtParametroBusqueda.getText()));
            modelTablePersonaV2.setPersonas(personas);
            modelTablePersonaV2.fireTableDataChanged();

        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }
        if (comboParametroBusqueda.getSelectedItem().equals("Nombre")) {
            List<Persona> personaNombre = controladorPersona.getPersonaNombreListo(txtParametroBusqueda.getText());
            modelTablePersonaV2.setPersonas(personaNombre);
            modelTablePersonaV2.fireTableDataChanged();
            txtParametroBusqueda.setText(null);
        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }

        if (comboParametroBusqueda.getSelectedItem().equals("Apellido")) {
            List<Persona> personaNombre = controladorPersona.getPersonaApellido(txtParametroBusqueda.getText());
            modelTablePersonaV2.setPersonas(personaNombre);
            modelTablePersonaV2.fireTableDataChanged();
            txtParametroBusqueda.setText(null);
        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }
        if (comboParametroBusqueda.getSelectedItem().equals("Correo")) {
            List<Persona> personaNombre = controladorPersona.getPersonaCorreo(txtParametroBusqueda.getText());
            modelTablePersonaV2.setPersonas(personaNombre);
            modelTablePersonaV2.fireTableDataChanged();
            txtParametroBusqueda.setText(null);
        } else {
            //JOptionPane.showMessageDialog(null,"no se encontro");
        }
    }//GEN-LAST:event_btnBuscarPersonaActionPerformed

    private void txtParametroBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParametroBusquedaKeyReleased
        // TODO add your handling code here:
        buscarCliente(txtParametroBusqueda.getText());
    }//GEN-LAST:event_txtParametroBusquedaKeyReleased

    private void txtParametroBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParametroBusquedaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtParametroBusquedaActionPerformed

    private void comboParametroBusquedaInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboParametroBusquedaInventarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboParametroBusquedaInventarioActionPerformed

    private void btnGuardarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarInventarioActionPerformed
        // TODO add your handling code here:
//          Inventario i = new Inventario();
//        i.setCodigo_pro(txtCodigo_proInventario.getText());
//        i.setDescripcion(txtDescripcionInventario.getText());
//        i.setPrecio_compra_sin_iva(Double.valueOf(txtPrecios_compraInventario.getText()));
//        i.setPrecio_compra_con_iva(Double.valueOf(TextPrecio_compraConIva.getText()));
//        i.setPrecio_mayorista(Double.valueOf(TextPrecio_mayorista.getText()));
//        i.setPrecio_cliente_fijo(Double.valueOf(TextPrecio_clienteFijo.getText()));
//        i.setPrecio_cliente_normal(Double.valueOf(TextPrecio_clienteNormal.getText()));
////        i.setFecha_caducidad(TextFecha_caducidad());
//        if (controladorInventario.registrarInventario(i)) {
//            JOptionPane.showMessageDialog(rootPane, "Inventario guardado con éxito del sitema.");
//            limpiarCamposInventario();
//            modelTableInventario.setInventarios(controladorInventario.obtenerProductosInventario());
//            modelTableInventario.fireTableDataChanged();
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "No se puede guardar el proveedor.", "ERROR", JOptionPane.ERROR_MESSAGE);
//        }
        guardarInventario();
        actualizarInventario();
    }//GEN-LAST:event_btnGuardarInventarioActionPerformed

    private void btnEditarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarInventarioActionPerformed
        // TODO add your handling code here:
//        if (inventarioSeleccionado == null) {
//            JOptionPane.showMessageDialog(rootPane, "No hay una propducto seleccionado para editar", "ERROR", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        if (inventarioSeleccionado != null) {  
//            inventarioSeleccionado = valoresActualizarInventario(inventarioSeleccionado);
//            if (controladorInventario.actualizarInventario(inventarioSeleccionado)) {
//                JOptionPane.showMessageDialog(rootPane, "Producto editado con exito del sitema.");
//                limpiarCamposInventario();
//                inventarioSeleccionado = null;
//                modelTableInventario.setInventarios(controladorInventario.obtenerProductosInventario());
//                modelTableInventario.fireTableDataChanged();
//            } else {
//                JOptionPane.showMessageDialog(rootPane, "No se puede editar la Producto", "ERROR", JOptionPane.ERROR_MESSAGE);
//            }
        editarInvebtario();
        actualizarInventario();
    }//GEN-LAST:event_btnEditarInventarioActionPerformed


    private void btnEliminarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInventarioActionPerformed
        // TODO add your handling code here:
//       if (inventarioSeleccionado != null) {
//            if (controladorInventario.eliminarInventario(inventarioSeleccionado)) {
//                JOptionPane.showMessageDialog(rootPane, "Producto eliminado con éxito del sitema.");
//                limpiarCamposInventario();
//                inventarioSeleccionado = null;
//                modelTableInventario.setInventarios(controladorInventario.obtenerProductosInventario());
//                modelTableInventario.fireTableDataChanged();
//            } else {
//                JOptionPane.showMessageDialog(rootPane, "No se puede eliminar el producto seleccionado.", "ERROR", JOptionPane.ERROR_MESSAGE);
//            }
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "No hay producto seleccionada para eliminar.", "ERROR", JOptionPane.ERROR_MESSAGE);
//        }
        eliminarInventario();
        actualizarInventario();
    }//GEN-LAST:event_btnEliminarInventarioActionPerformed

    private void btnTraerInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerInventarioActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnTraerInventarioActionPerformed

    private void btnLimpiarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarInventarioActionPerformed
        // TODO add your handling code here:
        limpiarCamposInventario();
    }//GEN-LAST:event_btnLimpiarInventarioActionPerformed

    private void btnBuscarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInventarioActionPerformed
        // TODO add your handling code here:
//         if (comboParametroBusquedaInventario.getSelectedItem().equals("Codigo Producto")) {
//            List<Inventario> inventario = new ArrayList<>();
//            inventario.add((Inventario) controladorInventario.getPersonaCodigo_pro(txtParametroBusquedaInventario.getText()));
//            modelTableInventario.setInventarios(inventario);
//            modelTableInventario.fireTableDataChanged();
//            
//        }else{
//         //JOptionPane.showMessageDialog(null,"no se encontro");
//        }
//        if (comboParametroBusquedaInventario.getSelectedItem().equals("Descripcion")) {
//            List<Inventario> Descripcion = controladorInventario.getPersonaDescripcion(txtParametroBusquedaInventario.getText());
//            modelTableInventario.setInventarios(Descripcion);
//            modelTableInventario.fireTableDataChanged();
//            txtParametroBusquedaInventario.setText(null);
//        }else{
//         //JOptionPane.showMessageDialog(null,"no se encontro");
//        }
        System.out.println("Combo" + comboParametroBusquedaInventario.getSelectedIndex());
        switch (comboParametroBusquedaInventario.getSelectedIndex()) {
            case 0://Codigo
                modelTableInventario.setInventarios(controladorInventario.ObtenerCodigo_pro(txtParametroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
            case 1://7Descripcion
                modelTableInventario.setInventarios(controladorInventario.obtenerProductosInventarioDescripcion(txtParametroBusquedaInventario.getText()));
                modelTableInventario.fireTableDataChanged();
                break;
        }

    }//GEN-LAST:event_btnBuscarInventarioActionPerformed

    private void comboParametroBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboParametroBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboParametroBusquedaActionPerformed

    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtCedulaActionPerformed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNombresActionPerformed

    private void txtParametroBusquedaProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParametroBusquedaProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParametroBusquedaProveedorActionPerformed

    private void txtCedulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusLost
        // TODO add your handling code here:
        if (RadioButton_cedula.isSelected()) {
            if (txtCedula.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "El campo cedula no tiene datos", "Error", JOptionPane.ERROR_MESSAGE);
                txtCedula.requestFocus();
            }
            if (utilidades.validadorDeCedula(txtCedula.getText())) {
                JOptionPane.showMessageDialog(this, "La CEDULA ingresada no es valida", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else if (RadioButton_pasaporte.isSelected()) {
            JOptionPane.showMessageDialog(this, "Pasaporte Ingresado Correctamente");
        }
    }//GEN-LAST:event_txtCedulaFocusLost

    private void RadioButton_cedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButton_cedulaActionPerformed
        // TODO add your handling code here:
        if (RadioButton_cedula.isSelected()) {
            RadioButton_pasaporte.setEnabled(false);
        } else {
            RadioButton_pasaporte.setEnabled(true);
        }
    }//GEN-LAST:event_RadioButton_cedulaActionPerformed

    private void RadioButton_pasaporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButton_pasaporteActionPerformed
        // TODO add your handling code here:
        if (RadioButton_pasaporte.isSelected()) {
            RadioButton_cedula.setEnabled(false);
        } else {
            RadioButton_cedula.setEnabled(true);
        }
    }//GEN-LAST:event_RadioButton_pasaporteActionPerformed

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        AcercaDe pantallaAcercaDe = new AcercaDe(this, true);
        pantallaAcercaDe.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void txtPrecios_compraInventarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecios_compraInventarioFocusLost
        // TODO add your handling code here:
        double valor = precioConIva(Double.parseDouble(txtPrecios_compraInventario.getText()));
        TextPrecio_compraConIva.setText(String.valueOf(valor));
        TextPrecio_mayorista.setText(String.valueOf(precioMayorista(Double.parseDouble(txtPrecios_compraInventario.getText()))));
        TextPrecio_clienteFijo.setText(String.valueOf(precioClienteFijo(Double.parseDouble(txtPrecios_compraInventario.getText()))));
        TextPrecio_clienteNormal.setText(String.valueOf(precioNormal(Double.parseDouble(txtPrecios_compraInventario.getText()))));
    }

    public double precioConIva(double precioSinIva) {
        return ((precioSinIva * 0.12) + precioSinIva);
    }

    public double precioMayorista(double precioSinIva) {
        return ((precioSinIva * 0.10) + precioSinIva);
    }

    public double precioClienteFijo(double precioSinIva) {
        return ((precioSinIva * 0.12) + precioSinIva);
    }

    public double precioNormal(double precioSinIva) {
        return ((precioSinIva * 0.15) + precioSinIva);

    }//GEN-LAST:event_txtPrecios_compraInventarioFocusLost
    public int cantidadproductoVenta() {
        int cantidad;
        cantidad = Integer.parseInt(txtCantidadProductoVentas.getText());
        return cantidad;
    }

    public int codigoProductoventa() {
        int codigo;
        codigo = Integer.parseInt(txtProductoVentas.getText());
        return codigo;
    }

    List<ProductoVenta> productosVenta;
    private void btnAgregarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarVentasActionPerformed
        String codigoproducto = txtProductoVentas.getText();
        if (codigoproducto != null && !codigoproducto.isEmpty()) {
            Inventario productosobtenidos = controladorInventario.ObtenerInventarioconId(txtProductoVentas.getText());
            if (productosobtenidos != null) {
                productosobtenidos.setCantidadProductosVender(Integer.parseInt(txtCantidadProductoVentas.getText()));
                ProductoVenta productoenVenta = new ProductoVenta();
                productoenVenta.setCantidad(productosobtenidos.getCantidadProductosVender());
                productoenVenta.setDescripcion(productosobtenidos.getDescripcion());
                double valorsinIVA = (productosobtenidos.getPrecio_cliente_normal() / 1.12);
                productoenVenta.setSubTotal(utilidades.dosDecimales(valorsinIVA));
                productoenVenta.setTotal(utilidades.dosDecimales(valorsinIVA * productosobtenidos.getCantidadProductosVender()));
                productosVenta.add(productoenVenta);
                valoresnotaventa();
                modelTableVentas.setProductoVenta(productosVenta);
                modelTableVentas.fireTableDataChanged();
            }
        }
    }//GEN-LAST:event_btnAgregarVentasActionPerformed
    public void valoresnotaventa() {
        Inventario i = controladorInventario.ObtenerInventarioconId(txtProductoVentas.getText());
        Double subtotalproducto = i.getPrecio_cliente_normal();
        int cantidad = Integer.parseInt(String.valueOf(txtCantidadProductoVentas.getText()));
        Double subtotalventa = Double.parseDouble(String.valueOf(txtSubTotalVentas.getText()));
        Double iva0 = Double.parseDouble(String.valueOf(txtIVAVentas.getText()));
        Double total = Double.parseDouble(String.valueOf(txtTotalVentas.getText()));
        Double subtotalfinal0 = subtotalproducto * cantidad;
        Double subtotalfinal1 = utilidades.dosDecimales(subtotalventa + subtotalfinal0);
        Double iva1 = utilidades.dosDecimales(subtotalfinal1 * 0.12);
        Double total1 = utilidades.dosDecimales(subtotalfinal1 + iva1);
        txtSubTotalVentas.setText(String.valueOf(subtotalfinal1));
        txtIVAVentas.setText(String.valueOf(iva1));
        txtTotalVentas.setText(String.valueOf(total1));

    }

    public void PersonasVentas() {
        Persona personaEditarLocal = controladorPersona.getPersonaCedula(txtCedulaoRucClienteVentas.getText());
        if (personaEditarLocal != null) {
            txtCedulaoRucClienteVentas.setText(personaEditarLocal.getCedula());
            txtNombreClienteVentas.setText(personaEditarLocal.getNombre());
            txtTelefonoClienteVentas.setText(personaEditarLocal.getTelefono());
            txtDireccionClienteVentas.setText(personaEditarLocal.getDireccion());

        } else {
            JOptionPane.showMessageDialog(rootPane, "No se encontró la persona con ese número de cédula", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtCedulaoRucClienteVentas.setText("");
            txtCedulaoRucClienteVentas.requestFocus();
        }
    }
    private void txtCedulaoRucClienteVentasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaoRucClienteVentasFocusLost
        PersonasVentas();
    }//GEN-LAST:event_txtCedulaoRucClienteVentasFocusLost

    private void txtFechaVentaVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaVentaVentasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaVentaVentasActionPerformed
    public void NombreVentas() {
        Persona personaEditarLocal = controladorPersona.getPersonaNombre(txtNombreClienteVentas.getText());
        if (personaEditarLocal != null) {
            txtCedulaoRucClienteVentas.setText(personaEditarLocal.getCedula());
            txtNombreClienteVentas.setText(personaEditarLocal.getNombre());
            txtTelefonoClienteVentas.setText(personaEditarLocal.getTelefono());
            txtDireccionClienteVentas.setText(personaEditarLocal.getDireccion());

        } else {
            JOptionPane.showMessageDialog(rootPane, "No se encontró una persona con ese nombre", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtNombreClienteVentas.setText("");
            txtNombreClienteVentas.requestFocus();
        }
    }
    private void txtNombreClienteVentasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreClienteVentasFocusLost
        // TODO add your handling code here:
        NombreVentas();
    }//GEN-LAST:event_txtNombreClienteVentasFocusLost

    private void btnGuardarProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProveedoresActionPerformed
        // TODO add your handling code here:
//        Proveedores proveedores = new Proveedores();
//        proveedores.setRuc(txtRucProveedores.getText());
//        proveedores.setRazonSocial(txtRazonSocialProveedores.getText());
//        proveedores.setTipoActividad(txtTipoActividadProveedores.getText());
//        proveedores.setNombre_representante_legal(txtNombreRepresentateLegalProveedores.getText());
//        proveedores.setApellidos_representante_legal(txtApellidosRepresentateLegalProveedores.getText());
//        proveedores.setTelefono(txtTelefonoProveedores.getText());
//        proveedores.setCorreo(txtCorrreoProveedores.getText());
//        proveedores.setDireccion(txtDireccionProveedores.getText());
//        //        proveedores.setFecha_registro(String.valueOf(txtFecha_registroProveedores.getText()));
//        if (controladorProveedor.registrarProveedor(proveedores)) {
//            JOptionPane.showMessageDialog(rootPane, "Proveedor guardado con éxito del sitema.");
//            limpiarCamposProveedor();
//            modelTableProveedores.setProveedores(controladorProveedor.obtenerProveedores());
//            modelTableProveedores.fireTableDataChanged();
//        } else {
//            JOptionPane.showMessageDialog(rootPane, "No se puede guardar el proveedor.", "ERROR", JOptionPane.ERROR_MESSAGE);
//        }
        GuardarProvedores();
        actualizarProvedores();
    }//GEN-LAST:event_btnGuardarProveedoresActionPerformed

    private void txtDireccionProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionProveedoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionProveedoresActionPerformed

    private void txtTelefonoProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoProveedoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoProveedoresActionPerformed

    private void btnEditarProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProveedoresActionPerformed
        // TODO add your handling code here:
        editarProvedores();
        actualizarProvedores();
    }//GEN-LAST:event_btnEditarProveedoresActionPerformed

    private void btnElimnarProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimnarProveedoresActionPerformed
        // TODO add your handling code here:
        eliminarProvedores();
        actualizarProvedores();
    }//GEN-LAST:event_btnElimnarProveedoresActionPerformed

    private void btnTraerRegistroProvedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraerRegistroProvedorActionPerformed
        // TODO add your handling code here:
        traerUltimoProvedorRegistro();
    }//GEN-LAST:event_btnTraerRegistroProvedorActionPerformed

    private void comboParamtroBusquedaProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboParamtroBusquedaProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboParamtroBusquedaProveedorActionPerformed

    private void btnBuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProveedorActionPerformed
        // TODO add your handling code here:
        if (txtParametroBusquedaProveedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No hay datos. Por favor ingresar datos a buscar", "ERROR", JOptionPane.ERROR_MESSAGE);

        } else {
            buscarProvedoresParametros();
        }
    }//GEN-LAST:event_btnBuscarProveedorActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        BusquedaAvanzada buscar = new BusquedaAvanzada(this, true, modelTableInventario, controladorInventario);
        buscar.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton2ActionPerformed
    public void GuardarNotaVenta() {
        Venta2 v = new Venta2();
        NotaVenta nv = new NotaVenta();
        for (ProductoVenta venta2 : productosVenta) {
            v.setCantidadProducto(Integer.parseInt(txtCantidadProductoVentas.getText()));
            v.setDescripcion(txtDescripcionInventario.getText());
            v.setSubTotal(Double.parseDouble(txtSubTotalVentas.getText()));
            v.setTotal(Double.parseDouble(txtTotalVentas.getText()));
            controladorInventario.registrarInventario(inventarioSeleccionado);
        }
        for (ProductoVenta venta2 : productosVenta) {
            nv.setNumero_nota_venta(txtNotaVentaVentas.getText());
        }

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        GuardarNotaVenta();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnLimpiarProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarProveedoresActionPerformed
        // TODO add your handling code here:
        gestionProvedores.limpiar_Caja_Provedores();
    }//GEN-LAST:event_btnLimpiarProveedoresActionPerformed
    //Metodo para limpiar campos
    private Inventario valoresActualizarInventario(Inventario i) {
//        i.setCodProducto(txtInventarioCodProducto.getText());
//        i.setDescripcion(txtInventarioDescripcion.getText());
//        i.setPrecioCompra(txtInventarioPrecioCompra.getText());
//        i.setPrecioVenta(txtInventarioPrecioVenta.getText());
//        i.setCanProductos(txtInventarioCantidadProdcutos.getText());
        return i;
    }

    void limpiarCamposProveedor() {
        txtRucProveedores.setText("");
        txtRazonSocialProveedores.setText("");
        txtTipoActividadProveedores.setText("");
        txtNombreRepresentateLegalProveedores.setText("");
        txtApellidosRepresentateLegalProveedores.setText("");
        txtTelefonoProveedores.setText("");
        txtCorrreoProveedores.setText("");
    }

    void limpiarCamposInventario() {
        txtCodigo_proInventario.setText("");
        txtDescripcionInventario.setText("");
        txtcatidadInventario.setText("");
        txtPrecios_compraInventario.setText("");
        TextPrecio_compraConIva.setText("");
        TextPrecio_mayorista.setText("");
        TextPrecio_clienteFijo.setText("");
        TextPrecio_clienteNormal.setText("");
        jDateInventario.setCalendar(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionContable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RadioButton_cedula;
    private javax.swing.JRadioButton RadioButton_pasaporte;
    private javax.swing.JTable TableVentas;
    private javax.swing.JTextField TextPrecio_clienteFijo;
    private javax.swing.JTextField TextPrecio_clienteNormal;
    private javax.swing.JTextField TextPrecio_compraConIva;
    private javax.swing.JTextField TextPrecio_mayorista;
    private javax.swing.JButton btnAgregarVentas;
    private javax.swing.JButton btnBuscarInventario;
    private javax.swing.JButton btnBuscarPersona;
    private javax.swing.JButton btnBuscarProveedor;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarInventario;
    private javax.swing.JButton btnEditarProveedores;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarInventario;
    private javax.swing.JButton btnElimnarProveedores;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarInventario;
    private javax.swing.JButton btnGuardarProveedores;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiarInventario;
    private javax.swing.JButton btnLimpiarProveedores;
    private javax.swing.JButton btnTraer;
    private javax.swing.JButton btnTraerInventario;
    private javax.swing.JButton btnTraerRegistroProvedor;
    private javax.swing.JComboBox<String> comboParametroBusqueda;
    private javax.swing.JComboBox<String> comboParametroBusquedaInventario;
    private javax.swing.JComboBox<String> comboParamtroBusquedaProveedor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateFechaNacimiento;
    private com.toedter.calendar.JDateChooser jDateFechaVencimientoDeuda;
    private com.toedter.calendar.JDateChooser jDateInventario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelVentas;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollCliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jcboxGenero;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblBuscarCliente;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem menuBuscarPersona;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuBar menuGeneral;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JPanel panelCliente;
    private javax.swing.JPanel panelCuerpoRegistro;
    private javax.swing.JPanel panelInventario;
    private javax.swing.JPanel panelProveedores;
    private javax.swing.JPanel panelVenta;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JTable tablaProvedores;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtApellidosRepresentateLegalProveedores;
    private javax.swing.JTextField txtCantidadProductoVentas;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCedulaoRucClienteVentas;
    private javax.swing.JTextField txtCodigo_proInventario;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCorrreoProveedores;
    private javax.swing.JTextField txtDescripcionInventario;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDireccionClienteVentas;
    private javax.swing.JTextField txtDireccionProveedores;
    private javax.swing.JTextField txtFechaVentaVentas;
    private javax.swing.JTextField txtIVAVentas;
    private javax.swing.JTextField txtNombreClienteVentas;
    private javax.swing.JTextField txtNombreRepresentateLegalProveedores;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNotaVentaVentas;
    private javax.swing.JTextField txtParametroBusqueda;
    private javax.swing.JTextField txtParametroBusquedaInventario;
    private javax.swing.JTextField txtParametroBusquedaProveedor;
    private javax.swing.JTextField txtPrecios_compraInventario;
    private javax.swing.JTextField txtProductoVentas;
    private javax.swing.JTextField txtRazonSocialProveedores;
    private javax.swing.JTextField txtRucProveedores;
    private javax.swing.JTextField txtSubTotalVentas;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefonoClienteVentas;
    private javax.swing.JTextField txtTelefonoProveedores;
    private javax.swing.JTextField txtTipoActividadProveedores;
    private javax.swing.JLabel txtTituloCliente;
    private javax.swing.JLabel txtTituloInventario;
    private javax.swing.JLabel txtTituloProveedores;
    private javax.swing.JTextField txtTotalVentas;
    private javax.swing.JTextField txtcatidadInventario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clickPersona(Persona p) {
        txtCedula.setText(p.getCedula());
        txtNombres.setText(p.getNombre());
        txtApellidos.setText(p.getApellido());
        txtDireccion.setText(p.getDireccion());
        txtTelefono.setText(p.getTelefono());
        txtCorreo.setText(p.getCorreo());
        jcboxGenero.setSelectedIndex(p.getGenero());
        jDateFechaNacimiento.setDate(p.getFachaNacimiento());
        personaEditarEliminar = p;
    }

    private void buscarCliente(String text) {
        System.out.println("Text:" + text);
        System.out.println("ObjetoSelc:" + comboParametroBusqueda.getSelectedIndex());
        switch (comboParametroBusqueda.getSelectedIndex()) {
            case 0://Cedula
                modelTablePersonaV2.setPersonas(controladorPersona.getPersonaCedulaLista(text));
                modelTablePersonaV2.fireTableDataChanged();
                break;
            case 1://nombre
                modelTablePersonaV2.setPersonas(controladorPersona.getPersonaNombreListo(text));
                modelTablePersonaV2.fireTableDataChanged();
                break;
            case 2://apellido
                break;
        }
    }

    @Override
    public void clickProveedores(Proveedores p) {
        txtRucProveedores.setText(p.getRuc());
        txtRazonSocialProveedores.setText(p.getRazonSocial());
        txtTipoActividadProveedores.setText(p.getTipoActividad());
        txtNombreRepresentateLegalProveedores.setText(p.getNombre_representante_legal());
        txtApellidosRepresentateLegalProveedores.setText(p.getApellidos_representante_legal());
        txtTelefonoProveedores.setText(p.getTelefono());
        txtCorrreoProveedores.setText(p.getCorreo());
        txtDireccionProveedores.setText(p.getDireccion());
        jDateFechaVencimientoDeuda.setDate(p.getFechaVencimientoDeuda());
        editarProvedores = p;
    }

    public void clickInventario(Inventario i) {
        inventarioSeleccionado = i;
        txtCodigo_proInventario.setText(i.getCodigo_pro());
        txtDescripcionInventario.setText(i.getDescripcion());
        txtcatidadInventario.setText(i.getCan_productos());
        txtPrecios_compraInventario.setText(Double.toString(i.getPrecio_compra_sin_iva()));
        TextPrecio_compraConIva.setText(Double.toString(i.getPrecio_compra_con_iva()));
        TextPrecio_mayorista.setText(Double.toString(i.getPrecio_mayorista()));
        TextPrecio_clienteFijo.setText(Double.toString(i.getPrecio_cliente_fijo()));
        TextPrecio_clienteNormal.setText(Double.toString(i.getPrecio_cliente_normal()));
        jDateInventario                                                                                                                                                                                                                                                                                                                                                                                                                 .setDate(i.getFecha_caducidad());

    }

    public void clickVentas(Inventario get) {
        inventarioSeleccionado = get;
        txtProductoVentas.setText(String.valueOf(get.getCodigo_pro()));
        txtCantidadProductoVentas.setText(String.valueOf(get.getCan_productos()));
    }

    public void calcularValoresAdicionales() {
        double subTotal = 0;
        double iva = 0;
        double precioFinal = 0;
        if (!productosVenta.isEmpty()) {
            for (ProductoVenta productoVenta : productosVenta) {
                subTotal = subTotal + (productoVenta.getSubTotal() * productoVenta.getCantidad());
            }
            iva = subTotal * 0.12;
            precioFinal = subTotal + iva;
            txtSubTotalVentas.setText(String.valueOf(utilidades.dosDecimales(subTotal)));
            txtIVAVentas.setText(String.valueOf(utilidades.dosDecimales(iva)));
            txtTotalVentas.setText(String.valueOf(utilidades.dosDecimales(precioFinal)));
        } else {
            txtSubTotalVentas.setText(String.valueOf(subTotal));
            txtIVAVentas.setText(String.valueOf(iva));
            txtTotalVentas.setText(String.valueOf(precioFinal));
        }

    }

    @Override
    public void clickTipoUsuario(TipoUsuario p) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    int clickContador;
    boolean ejecutor;

    public void clickProductoVentas(ProductoVenta get) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void clickProductoVenta(ProductoVenta p) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
